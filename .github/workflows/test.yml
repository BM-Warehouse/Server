# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Testing with Jest

on:
  push:
    branches: [ "main", "feat/github-flow" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest
    
    # Service containers to run with `runner-job`
    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres
        # Provide the password for postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20
    
    - name: Setup pnpm
      uses: pnpm/action-setup@v3
      with:
        version: 8

    - name: Install Dependency
      run: pnpm install
      working-directory: project
    
    - name: init DB
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/fp"
        SECRET_KEY: 'rahasia'
      run: |
        echo ${DATABASE_URL} 
        echo ${SECRET_KEY} 
        pnpm prisma:migrate

    - name: Testing
      env:
        DATABASE_URL: "postgresql://postgres:postgres@localhost:5432/fp"
        SECRET_KEY: 'rahasia'
      run: pnpm test

